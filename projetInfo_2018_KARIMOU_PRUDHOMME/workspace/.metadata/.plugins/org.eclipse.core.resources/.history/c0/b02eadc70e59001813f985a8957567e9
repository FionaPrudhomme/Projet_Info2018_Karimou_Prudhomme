package calendrier;

import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.GridBagConstraints;
import javax.swing.JLabel;
import connexionBDD.Connexion;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import java.sql.PreparedStatement;
import java.sql.ResultSet;


public class AfficheDate extends JFrame implements ActionListener {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int yy;
	private int mm;
	private int dd;
	
	
	private JLabel labelDate = new JLabel("Date : ");
	private JLabel labelChambre = new JLabel("Chambre : ");
	
	private String[] li = new String[20];
	
	
	private JButton button1 = new JButton("Retour au calendrier");
	private JPanel panAfficheDate = new JPanel(new GridBagLayout());
	PreparedStatement statement = null;
    ResultSet resultat = null;
 
	public AfficheDate(int yy ,int mm,int  dd){
		this.yy = yy;
		this.mm = mm;
		this.dd = dd;
		this.init();
	}
	protected JLabel date = new JLabel(Integer.toString(dd) +"/" +Integer.toString(mm)+ "/" +Integer.toString(yy));
	private String date1 = Integer.toString(dd) +"/" +Integer.toString(mm)+ "/" +Integer.toString(yy);
	
	public void init() {
		GridBagConstraints constraints = new GridBagConstraints();
        constraints.anchor = GridBagConstraints.WEST;
        constraints.insets = new Insets(10, 10, 10, 10);
		
        constraints.gridx = 0;
        constraints.gridy = 0;     
        panAfficheDate.add(this.labelDate, constraints);

        constraints.gridx = 1;
        panAfficheDate.add(date, constraints);
        
        
        try {
        	for(int i=1; i<10 ; i++){
        		PreparedStatement preparedState = Connexion.getInstance().prepareStatement("SELECT num_resa from resa_chambre  where id = '"+i+"'");
            	ResultSet resultat = preparedState.executeQuery();
                while(resultat.next()){
                	
                	PreparedStatement preparedState1 = Connexion.getInstance().prepareStatement("SELECT chambre from resa_chambre  where date_debut = '"+date1+"' OR date_finÂ = '"+date1+"'");
                	ResultSet resultat1 = preparedState1.executeQuery();
                	while(resultat1.next()){
                		for(int j=0; j<10;j++){
                			li[j] = resultat1.getString(1);
                		}
                		
                	}
               
                	
                }
        	}
        }
        catch (Exception e3) {
			e3.printStackTrace();
		}
		
			
        
        
        
        constraints.gridx = 0;
        constraints.gridy = 2;     
        panAfficheDate.add(this.labelChambre, constraints);

        String inter = String.join(" ,", li);
        JLabel chambre = new JLabel(inter);
        constraints.gridx = 1;
        panAfficheDate.add(chambre, constraints);
        
        this.button1.addActionListener(this);
        constraints.gridx = 1;
        constraints.gridy = 3;
        constraints.gridwidth = 2;
        constraints.anchor = GridBagConstraints.EAST;
        panAfficheDate.add(this.button1, constraints);
        
        add(this.panAfficheDate);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        pack();
        setLocationRelativeTo(null);
	}

	public void actionPerformed(ActionEvent e) {
		
		dispose();
		Planning pann = new Planning();
		pann.setVisible(true);
				
	
	
	}
	
	



}
